"use strict";(self.webpackChunketro_site_2=self.webpackChunketro_site_2||[]).push([[9825],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),p=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=p(e.components);return a.createElement(c.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,d=u["".concat(c,".").concat(m)]||u[m]||f[m]||o;return n?a.createElement(d,i(i({ref:t},s),{},{components:n})):a.createElement(d,i({ref:t},s))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[u]="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9662:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const o={},i="Webcam Filter in React",l={unversionedId:"tutorials/react-webcam-filter",id:"version-0.11/tutorials/react-webcam-filter",title:"Webcam Filter in React",description:"In this guide, we'll create a simple webcam filter using React and Etro.",source:"@site/versioned_docs/version-0.11/tutorials/react-webcam-filter.md",sourceDirName:"tutorials",slug:"/tutorials/react-webcam-filter",permalink:"/docs/0.11/tutorials/react-webcam-filter",draft:!1,tags:[],version:"0.11",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Writing a Visual Effect",permalink:"/docs/0.11/tutorials/custom-glsl-effect"}},c={},p=[{value:"Setting up the React app",id:"setting-up-the-react-app",level:2},{value:"Installing Etro",id:"installing-etro",level:2},{value:"Creating the movie",id:"creating-the-movie",level:2},{value:"Adding an effect",id:"adding-an-effect",level:2},{value:"Changing the saturation",id:"changing-the-saturation",level:2},{value:"Conclusion",id:"conclusion",level:2}],s={toc:p};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"webcam-filter-in-react"},"Webcam Filter in React"),(0,r.kt)("p",null,"In this guide, we'll create a simple webcam filter using React and Etro."),(0,r.kt)("h2",{id:"setting-up-the-react-app"},"Setting up the React app"),(0,r.kt)("p",null,"First, we'll set up a new React app using\n",(0,r.kt)("a",{parentName:"p",href:"https://create-react-app.dev"},"create-react-app"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npx create-react-app webcam-filter\ncd webcam-filter\n")),(0,r.kt)("h2",{id:"installing-etro"},"Installing Etro"),(0,r.kt)("p",null,"Now, we'll install Etro:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install etro\n")),(0,r.kt)("h2",{id:"creating-the-movie"},"Creating the movie"),(0,r.kt)("p",null,"Now, we'll create a new ",(0,r.kt)("a",{parentName:"p",href:"../reference/movie"},"movie"),", add a ",(0,r.kt)("a",{parentName:"p",href:"../reference/layers/video"},"video layer")," to it, and play it."),(0,r.kt)("p",null,"Create a new file ",(0,r.kt)("inlineCode",{parentName:"p"},"src/Movie.js"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'import React, { useEffect, useRef } from "react";\nimport etro from "etro";\n\nexport default function Movie() {\n  const canvasRef = useRef();\n  const movieRef = useRef();\n\n  useEffect(() => {\n    // Use the canvas ref to get the canvas element\n    const canvas = canvasRef.current;\n\n    // Create a new movie instance\n    const movie = new etro.Movie({ canvas });\n\n    // Get the user\'s webcam stream\n    navigator.mediaDevices\n      .getUserMedia({ video: true })\n\n      // Create a video element from the stream\n      .then((stream) => {\n        const video = document.createElement("video");\n        video.srcObject = stream;\n        return new Promise((resolve) => {\n          video.onloadedmetadata = () => {\n            resolve(video);\n          };\n        });\n      })\n\n      // Add a video layer to the movie and play it\n      .then((video) => {\n        canvas.width = video.videoWidth;\n        canvas.height = video.videoHeight;\n        const layer = new etro.layer.Video({\n          startTime: 0,\n          source: video,\n        });\n        movie.addLayer(layer);\n        movie.play();\n        movieRef.current = movie;\n      });\n  }, []);\n\n  return <canvas ref={canvasRef} />;\n}\n')),(0,r.kt)("p",null,"Use the ",(0,r.kt)("inlineCode",{parentName:"p"},"Movie")," component in ",(0,r.kt)("inlineCode",{parentName:"p"},"src/App.js"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'import React from "react";\nimport Movie from "./Movie";\n\nfunction App() {\n  return (\n    <div className="App">\n      <Movie />\n    </div>\n  );\n}\n')),(0,r.kt)("h2",{id:"adding-an-effect"},"Adding an effect"),(0,r.kt)("p",null,"Now, we'll ",(0,r.kt)("a",{parentName:"p",href:"custom-glsl-effect"},"write our own effect"),"."),(0,r.kt)("p",null,"Create a new file ",(0,r.kt)("inlineCode",{parentName:"p"},"src/effect.js"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'import etro from "etro";\n\nexport default class SaturationEffect extends etro.effect.Shader {\n  constructor(options = {}) {\n    super({\n      fragmentSource: `\n        precision highp float;\n\n        uniform sampler2D u_Source;\n        uniform float u_Saturation;\n\n        varying vec2 v_TextureCoord;\n\n        void main() {\n          vec4 color = texture2D(u_Source, v_TextureCoord);\n          float luminance = dot(color.rgb, vec3(0.2126, 0.7152, 0.0722));\n          gl_FragColor = vec4(mix(vec3(luminance), color.rgb, u_Saturation), color.a);\n        }\n      `,\n      uniforms: {\n        saturation: "1f",\n      },\n    });\n\n    this.saturation = options.saturation || 1;\n  }\n}\n')),(0,r.kt)("p",null,"Next we need to add the effect to the layer. We'll do this in ",(0,r.kt)("inlineCode",{parentName:"p"},"src/Movie.js"),"."),(0,r.kt)("p",null,"Import the effect:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-diff"},' import React, { useEffect, useRef } from "react";\n import etro from "etro";\n+import SaturationEffect from "./effect";\n')),(0,r.kt)("p",null,"Add a ",(0,r.kt)("inlineCode",{parentName:"p"},"saturation")," property to the ",(0,r.kt)("inlineCode",{parentName:"p"},"Movie")," component:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-diff"},"-export default function Movie() {\n+export default function Movie({ saturation = 1 }) {\n")),(0,r.kt)("p",null,"Create a ref to store the effect instance:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-diff"}," export default function Movie() {\n   const canvasRef = useRef();\n   const movieRef = useRef();\n+  const effectRef = useRef();\n")),(0,r.kt)("p",null,"Add the effect to the layer:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-diff"},"         const layer = new etro.layer.Video({\n           startTime: 0,\n           source: video,\n         });\n+        const effect = new SaturationEffect();\n+        layer.addEffect(effect);\n+\n         movie.addLayer(layer);\n         movie.play();\n         movieRef.current = movie;\n+        effectRef.current = effect;\n       });\n")),(0,r.kt)("p",null,"Now, update the effect when the ",(0,r.kt)("inlineCode",{parentName:"p"},"saturation")," prop changes:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-diff"},"         movie.play();\n\n         effectRef.current = effect;\n         movieRef.current = movie;\n       });\n   }, []);\n+\n+  useEffect(() => {\n+    if (effectRef.current) {\n+      effectRef.current.saturation = saturation;\n+    }\n+  }, [saturation]);\n")),(0,r.kt)("p",null,"Finally, we can pass a temporary ",(0,r.kt)("inlineCode",{parentName:"p"},"saturation")," value to the ",(0,r.kt)("inlineCode",{parentName:"p"},"Movie")," component in\n",(0,r.kt)("inlineCode",{parentName:"p"},"src/App.js"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-diff"}," import React from 'react'\n import Movie from './Movie'\n\n function App() {\n    return (\n       <div className=\"App\">\n-         <Movie />\n+         <Movie saturation={0.5} />\n     </div>\n   )\n }\n")),(0,r.kt)("h2",{id:"changing-the-saturation"},"Changing the saturation"),(0,r.kt)("p",null,"Now, we'll add a slider to change the saturation."),(0,r.kt)("p",null,"Create a new file ",(0,r.kt)("inlineCode",{parentName:"p"},"src/Slider.js"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'import React from "react";\n\nexport default function Slider({ value, onChange }) {\n  return (\n    <input\n      type="range"\n      min="0"\n      max="1"\n      step="0.01"\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n    />\n  );\n}\n')),(0,r.kt)("p",null,"Now, import the slider in ",(0,r.kt)("inlineCode",{parentName:"p"},"src/App.js"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-diff"}," import React from 'react'\n import Movie from './Movie'\n+import Slider from './Slider'\n\n function App() {\n    return (\n       <div className=\"App\">\n          <Movie />\n+         <Slider />\n     </div>\n   )\n }\n")),(0,r.kt)("p",null,"Next, we'll add a state variable to the app to store the saturation value. This\nvalue will be modified by the slider and passed to the effect:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-diff"}," import React from 'react'\n import Movie from './Movie'\n import Slider from './Slider'\n\n function App() {\n+   const [saturation, setSaturation] = React.useState(1)\n+\n    return (\n      <div className=\"App\">\n-         <Movie saturation={0.5} />\n-      <Slider />\n+         <Movie saturation={saturation} />\n+       <Slider value={saturation} onChange={setSaturation} />\n      </div>\n    )\n }\n")),(0,r.kt)("h2",{id:"conclusion"},"Conclusion"),(0,r.kt)("p",null,"That's it! You've created a webcam app with a saturation effect. If you have\nany questions, feel free to ask them in the ",(0,r.kt)("a",{parentName:"p",href:"https://discord.gg/myrBsQ8Cht"},"etro Discord\nserver"),"."))}u.isMDXComponent=!0}}]);